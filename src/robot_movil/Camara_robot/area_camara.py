import cv2
import numpy as np

# Par치metros f칤sicos
area_real_m = 1.22         # 丘멆잺 Nueva 치rea real deseada (1.22 m x 1.22 m)
altura_camara_m = 1.38     # Altura de la c치mara desde el plano de trabajo
fov_horizontal_deg = 90    # 츼ngulo de visi칩n horizontal en grados

# Calcular el ancho real que ve la c치mara usando trigonometr칤a
fov_horizontal_rad = np.deg2rad(fov_horizontal_deg)
fov_ancho_m = 2 * altura_camara_m * np.tan(fov_horizontal_rad / 2)

# Iniciar la c치mara
cap = cv2.VideoCapture(1, cv2.CAP_DSHOW)
ret, frame = cap.read()
if not ret:
    print("No se pudo acceder a la c치mara.")
    exit()

frame_height, frame_width = frame.shape[:2]
pixeles_por_metro = frame_width / fov_ancho_m

# Calcular dimensiones del 치rea de 1.20m en p칤xeles
ancho_px = int(area_real_m * pixeles_por_metro)
alto_px = int(area_real_m * (frame_height / frame_width))  # mantener proporci칩n de aspecto

# Coordenadas para centrar el rect치ngulo en la imagen
x1 = int((frame_width - ancho_px) / 2)
y1 = int((frame_height - alto_px) / 2)
x2 = x1 + ancho_px
y2 = y1 + alto_px

print(f"游늺 Campo de visi칩n estimado: {fov_ancho_m:.2f} m de ancho")
print(f"游늻 Area dibujada: {area_real_m} x {area_real_m} m -> {ancho_px} x {alto_px} px")

while True:
    ret, frame = cap.read()
    if not ret:
        break

    # Dibuja un rect치ngulo simulando el 치rea de 1.20x1.20 m
    cv2.rectangle(frame, (x1, y1), (x2, y2), (0, 255, 0), 2)
    cv2.putText(frame, "Area 1.22m x 1.2m", (x1 + 10, y1 - 10),
                cv2.FONT_HERSHEY_SIMPLEX, 0.7, (0, 255, 0), 2)

    cv2.imshow("Verificaci칩n de FOV", frame)
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
